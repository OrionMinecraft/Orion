dependencies {
    // Dependencies what are present on runtime
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2_version
    compile group: 'org.ow2.asm', name: 'asm', version: asm_version

    // Dependencies which will be downloaded
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile(group: 'cpw.mods', name: 'modlauncher', version: modLauncherVersion) {
        exclude module: '*'
    }
    compile(group: 'org.spongepowered', name: 'configurate-hocon', version: hocon_version) {
        exclude module: 'guava'
    }

    // TODO: way to disable Mixin AP
    compile(group: 'org.spongepowered', name: 'mixin', version: mixin_version) {
        exclude module: 'commons-io'
        exclude module: 'guava'
        exclude module: 'launchwrapper'
        exclude module: 'log4j-core'
        exclude module: 'gson'
    }

    compile group: 'org.checkerframework', name: 'checker-qual', version: checker_qual_version

    // Required to get Mixin AP working
    compile group: 'com.google.code.gson', name: 'gson', version: gson_version
    compile group: 'com.google.guava', name: 'guava', version: guava_version
}

compileJava {
    options.compilerArgs += "-proc:none"
}

jar {
    manifest {
        attributes("Automatic-Module-Name": "eu.mikroskeem.orion.api")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'orion.api'

            artifact sourcesJar
            artifact javadocJar
            from components.java

            // Customize POM
            pom.withXml {
                def root = asNode()
                root.appendNode 'description', project.description
                root.appendNode 'name', 'OrionAPI'
                root.appendNode 'url', 'https://github.com/OrionMinecraft/Orion'

                // <repositories>
                def repositories = root.appendNode 'repositories'
                // * <repository>
                def repository0 = repositories.appendNode 'repository'
                repository0.appendNode 'id', 'sponge-repo'
                repository0.appendNode 'url', 'https://repo.spongepowered.org/maven'
                // * </repository>
                // * <repository>
                def repository1 = repositories.appendNode 'repository'
                repository1.appendNode 'id', 'mikroskeem-repo'
                repository1.appendNode 'url', 'https://repo.wut.ee/repository/mikroskeem-repo'
                // * </repository>
                // </repositories>

                // <issueManagement>
                def issueManagement = root.appendNode 'issueManagement'
                issueManagement.appendNode 'system', 'GitHub Issues'
                issueManagement.appendNode 'url', 'https://github.com/OrionMinecraft/Orion/issues'
                // </issueManagement>

                // <licenses>
                def licenses = root.appendNode 'licenses'
                // * <license>
                def license0 = licenses.appendNode 'license'
                license0.appendNode 'name', 'MIT License'
                license0.appendNode 'url', 'https://opensource.org/licenses/MIT'
                // * </license>
                // </licenses>

                // <developers>
                def developers = root.appendNode 'developers'
                // * <developer>
                def developer0 = developers.appendNode 'developer'
                developer0.appendNode 'id', 'mikroskeem'
                developer0.appendNode 'name', 'Mark Vainomaa'
                developer0.appendNode 'email', 'mikroskeem@mikroskeem.eu'
                // * </developer>
                // </developers>

                // <scm>
                def scm = root.appendNode 'scm'
                scm.appendNode 'connection', 'scm:git@github.com:OrionMinecraft/Orion.git'
                scm.appendNode 'developerConnection', 'scm:git@github.com:OrionMinecraft/Orion.git'
                scm.appendNode 'url', 'https://github.com/OrionMinecraft/Orion'
                // </scm>

                new XmlNodePrinter(preserveWhitespace: true).print root
            }
        }
    }

    repositories {
        mavenLocal()

        if(project.hasProperty('wutee.repository.deploy.username') && project.hasProperty('wutee.repository.deploy.password')) {
            maven {
                credentials {
                    username rootProject.properties.get('wutee.repository.deploy.username')
                    password rootProject.properties.get('wutee.repository.deploy.password')
                }

                name = 'mikroskeem-repo'
                url = 'https://repo.wut.ee/repository/mikroskeem-repo'
            }
        }
    }
}
